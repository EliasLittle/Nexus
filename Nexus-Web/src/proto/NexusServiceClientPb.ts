/**
 * @fileoverview gRPC-Web generated client stub for nexus
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.2
// source: nexus.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as nexus_pb from './nexus_pb'; // proto import: "nexus.proto"


export class NexusServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorRegisterEventStream = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/RegisterEventStream',
    grpcWeb.MethodType.UNARY,
    nexus_pb.RegisterEventStreamRequest,
    nexus_pb.RegisterEventStreamResponse,
    (request: nexus_pb.RegisterEventStreamRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.RegisterEventStreamResponse.deserializeBinary
  );

  registerEventStream(
    request: nexus_pb.RegisterEventStreamRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.RegisterEventStreamResponse>;

  registerEventStream(
    request: nexus_pb.RegisterEventStreamRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterEventStreamResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.RegisterEventStreamResponse>;

  registerEventStream(
    request: nexus_pb.RegisterEventStreamRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterEventStreamResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/RegisterEventStream',
        request,
        metadata || {},
        this.methodDescriptorRegisterEventStream,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/RegisterEventStream',
    request,
    metadata || {},
    this.methodDescriptorRegisterEventStream);
  }

  methodDescriptorRegisterFile = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/RegisterFile',
    grpcWeb.MethodType.UNARY,
    nexus_pb.RegisterFileRequest,
    nexus_pb.RegisterFileResponse,
    (request: nexus_pb.RegisterFileRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.RegisterFileResponse.deserializeBinary
  );

  registerFile(
    request: nexus_pb.RegisterFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.RegisterFileResponse>;

  registerFile(
    request: nexus_pb.RegisterFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterFileResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.RegisterFileResponse>;

  registerFile(
    request: nexus_pb.RegisterFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterFileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/RegisterFile',
        request,
        metadata || {},
        this.methodDescriptorRegisterFile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/RegisterFile',
    request,
    metadata || {},
    this.methodDescriptorRegisterFile);
  }

  methodDescriptorRegisterDirectory = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/RegisterDirectory',
    grpcWeb.MethodType.UNARY,
    nexus_pb.RegisterDirectoryRequest,
    nexus_pb.RegisterDirectoryResponse,
    (request: nexus_pb.RegisterDirectoryRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.RegisterDirectoryResponse.deserializeBinary
  );

  registerDirectory(
    request: nexus_pb.RegisterDirectoryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.RegisterDirectoryResponse>;

  registerDirectory(
    request: nexus_pb.RegisterDirectoryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterDirectoryResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.RegisterDirectoryResponse>;

  registerDirectory(
    request: nexus_pb.RegisterDirectoryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterDirectoryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/RegisterDirectory',
        request,
        metadata || {},
        this.methodDescriptorRegisterDirectory,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/RegisterDirectory',
    request,
    metadata || {},
    this.methodDescriptorRegisterDirectory);
  }

  methodDescriptorRegisterDatabaseTable = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/RegisterDatabaseTable',
    grpcWeb.MethodType.UNARY,
    nexus_pb.RegisterDatabaseTableRequest,
    nexus_pb.RegisterDatabaseTableResponse,
    (request: nexus_pb.RegisterDatabaseTableRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.RegisterDatabaseTableResponse.deserializeBinary
  );

  registerDatabaseTable(
    request: nexus_pb.RegisterDatabaseTableRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.RegisterDatabaseTableResponse>;

  registerDatabaseTable(
    request: nexus_pb.RegisterDatabaseTableRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterDatabaseTableResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.RegisterDatabaseTableResponse>;

  registerDatabaseTable(
    request: nexus_pb.RegisterDatabaseTableRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.RegisterDatabaseTableResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/RegisterDatabaseTable',
        request,
        metadata || {},
        this.methodDescriptorRegisterDatabaseTable,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/RegisterDatabaseTable',
    request,
    metadata || {},
    this.methodDescriptorRegisterDatabaseTable);
  }

  methodDescriptorStoreValue = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/StoreValue',
    grpcWeb.MethodType.UNARY,
    nexus_pb.StoreValueRequest,
    nexus_pb.StoreValueResponse,
    (request: nexus_pb.StoreValueRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.StoreValueResponse.deserializeBinary
  );

  storeValue(
    request: nexus_pb.StoreValueRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.StoreValueResponse>;

  storeValue(
    request: nexus_pb.StoreValueRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.StoreValueResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.StoreValueResponse>;

  storeValue(
    request: nexus_pb.StoreValueRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.StoreValueResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/StoreValue',
        request,
        metadata || {},
        this.methodDescriptorStoreValue,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/StoreValue',
    request,
    metadata || {},
    this.methodDescriptorStoreValue);
  }

  methodDescriptorDeletePath = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/DeletePath',
    grpcWeb.MethodType.UNARY,
    nexus_pb.DeletePathRequest,
    nexus_pb.DeletePathResponse,
    (request: nexus_pb.DeletePathRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.DeletePathResponse.deserializeBinary
  );

  deletePath(
    request: nexus_pb.DeletePathRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.DeletePathResponse>;

  deletePath(
    request: nexus_pb.DeletePathRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.DeletePathResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.DeletePathResponse>;

  deletePath(
    request: nexus_pb.DeletePathRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.DeletePathResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/DeletePath',
        request,
        metadata || {},
        this.methodDescriptorDeletePath,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/DeletePath',
    request,
    metadata || {},
    this.methodDescriptorDeletePath);
  }

  methodDescriptorSubscribe = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/Subscribe',
    grpcWeb.MethodType.SERVER_STREAMING,
    nexus_pb.SubscribeRequest,
    nexus_pb.Event,
    (request: nexus_pb.SubscribeRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.Event.deserializeBinary
  );

  subscribe(
    request: nexus_pb.SubscribeRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<nexus_pb.Event> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/nexus.NexusService/Subscribe',
      request,
      metadata || {},
      this.methodDescriptorSubscribe);
  }

  methodDescriptorGetNode = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/GetNode',
    grpcWeb.MethodType.UNARY,
    nexus_pb.GetPathRequest,
    nexus_pb.GetNodeResponse,
    (request: nexus_pb.GetPathRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.GetNodeResponse.deserializeBinary
  );

  getNode(
    request: nexus_pb.GetPathRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.GetNodeResponse>;

  getNode(
    request: nexus_pb.GetPathRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.GetNodeResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.GetNodeResponse>;

  getNode(
    request: nexus_pb.GetPathRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.GetNodeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/GetNode',
        request,
        metadata || {},
        this.methodDescriptorGetNode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/GetNode',
    request,
    metadata || {},
    this.methodDescriptorGetNode);
  }

  methodDescriptorGetChildren = new grpcWeb.MethodDescriptor(
    '/nexus.NexusService/GetChildren',
    grpcWeb.MethodType.UNARY,
    nexus_pb.GetChildrenRequest,
    nexus_pb.GetChildrenResponse,
    (request: nexus_pb.GetChildrenRequest) => {
      return request.serializeBinary();
    },
    nexus_pb.GetChildrenResponse.deserializeBinary
  );

  getChildren(
    request: nexus_pb.GetChildrenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<nexus_pb.GetChildrenResponse>;

  getChildren(
    request: nexus_pb.GetChildrenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: nexus_pb.GetChildrenResponse) => void): grpcWeb.ClientReadableStream<nexus_pb.GetChildrenResponse>;

  getChildren(
    request: nexus_pb.GetChildrenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: nexus_pb.GetChildrenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/nexus.NexusService/GetChildren',
        request,
        metadata || {},
        this.methodDescriptorGetChildren,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/nexus.NexusService/GetChildren',
    request,
    metadata || {},
    this.methodDescriptorGetChildren);
  }

}


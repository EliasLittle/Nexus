// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: proto/nexus.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request/Response messages for Publishers
type RegisterEventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path in the data Trie
	EventStream   *EventStream           `protobuf:"bytes,2,opt,name=event_stream,json=eventStream,proto3" json:"event_stream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterEventStreamRequest) Reset() {
	*x = RegisterEventStreamRequest{}
	mi := &file_proto_nexus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterEventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEventStreamRequest) ProtoMessage() {}

func (x *RegisterEventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEventStreamRequest.ProtoReflect.Descriptor instead.
func (*RegisterEventStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterEventStreamRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegisterEventStreamRequest) GetEventStream() *EventStream {
	if x != nil {
		return x.EventStream
	}
	return nil
}

type RegisterEventStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterEventStreamResponse) Reset() {
	*x = RegisterEventStreamResponse{}
	mi := &file_proto_nexus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterEventStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEventStreamResponse) ProtoMessage() {}

func (x *RegisterEventStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEventStreamResponse.ProtoReflect.Descriptor instead.
func (*RegisterEventStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterEventStreamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterEventStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RegisterFileRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Path           string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                           // Path in the data Trie
	IndividualFile *IndividualFile        `protobuf:"bytes,2,opt,name=individual_file,json=individualFile,proto3" json:"individual_file,omitempty"` // Individual file details
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterFileRequest) Reset() {
	*x = RegisterFileRequest{}
	mi := &file_proto_nexus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterFileRequest) ProtoMessage() {}

func (x *RegisterFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterFileRequest.ProtoReflect.Descriptor instead.
func (*RegisterFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegisterFileRequest) GetIndividualFile() *IndividualFile {
	if x != nil {
		return x.IndividualFile
	}
	return nil
}

type RegisterFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterFileResponse) Reset() {
	*x = RegisterFileResponse{}
	mi := &file_proto_nexus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterFileResponse) ProtoMessage() {}

func (x *RegisterFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterFileResponse.ProtoReflect.Descriptor instead.
func (*RegisterFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RegisterDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`           // Path in the data Trie
	Directory     *Directory             `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"` // Directory details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDirectoryRequest) Reset() {
	*x = RegisterDirectoryRequest{}
	mi := &file_proto_nexus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDirectoryRequest) ProtoMessage() {}

func (x *RegisterDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDirectoryRequest.ProtoReflect.Descriptor instead.
func (*RegisterDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegisterDirectoryRequest) GetDirectory() *Directory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type RegisterDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDirectoryResponse) Reset() {
	*x = RegisterDirectoryResponse{}
	mi := &file_proto_nexus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDirectoryResponse) ProtoMessage() {}

func (x *RegisterDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDirectoryResponse.ProtoReflect.Descriptor instead.
func (*RegisterDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterDirectoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDirectoryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RegisterDatabaseTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                        // Path in the data Trie
	DatabaseTable *DatabaseTable         `protobuf:"bytes,2,opt,name=database_table,json=databaseTable,proto3" json:"database_table,omitempty"` // Database table details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDatabaseTableRequest) Reset() {
	*x = RegisterDatabaseTableRequest{}
	mi := &file_proto_nexus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDatabaseTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDatabaseTableRequest) ProtoMessage() {}

func (x *RegisterDatabaseTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDatabaseTableRequest.ProtoReflect.Descriptor instead.
func (*RegisterDatabaseTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterDatabaseTableRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegisterDatabaseTableRequest) GetDatabaseTable() *DatabaseTable {
	if x != nil {
		return x.DatabaseTable
	}
	return nil
}

type RegisterDatabaseTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDatabaseTableResponse) Reset() {
	*x = RegisterDatabaseTableResponse{}
	mi := &file_proto_nexus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDatabaseTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDatabaseTableResponse) ProtoMessage() {}

func (x *RegisterDatabaseTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDatabaseTableResponse.ProtoReflect.Descriptor instead.
func (*RegisterDatabaseTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterDatabaseTableResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDatabaseTableResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StoreValueRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Path  string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path in the data Trie
	// Types that are valid to be assigned to Value:
	//
	//	*StoreValueRequest_StringValue
	//	*StoreValueRequest_IntValue
	//	*StoreValueRequest_FloatValue
	Value         isStoreValueRequest_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreValueRequest) Reset() {
	*x = StoreValueRequest{}
	mi := &file_proto_nexus_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreValueRequest) ProtoMessage() {}

func (x *StoreValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreValueRequest.ProtoReflect.Descriptor instead.
func (*StoreValueRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{8}
}

func (x *StoreValueRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StoreValueRequest) GetValue() isStoreValueRequest_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StoreValueRequest) GetStringValue() *StringValue {
	if x != nil {
		if x, ok := x.Value.(*StoreValueRequest_StringValue); ok {
			return x.StringValue
		}
	}
	return nil
}

func (x *StoreValueRequest) GetIntValue() *IntValue {
	if x != nil {
		if x, ok := x.Value.(*StoreValueRequest_IntValue); ok {
			return x.IntValue
		}
	}
	return nil
}

func (x *StoreValueRequest) GetFloatValue() *FloatValue {
	if x != nil {
		if x, ok := x.Value.(*StoreValueRequest_FloatValue); ok {
			return x.FloatValue
		}
	}
	return nil
}

type isStoreValueRequest_Value interface {
	isStoreValueRequest_Value()
}

type StoreValueRequest_StringValue struct {
	StringValue *StringValue `protobuf:"bytes,2,opt,name=string_value,json=stringValue,proto3,oneof"` // Example of a specific type
}

type StoreValueRequest_IntValue struct {
	IntValue *IntValue `protobuf:"bytes,3,opt,name=int_value,json=intValue,proto3,oneof"` // Example of a specific type
}

type StoreValueRequest_FloatValue struct {
	FloatValue *FloatValue `protobuf:"bytes,4,opt,name=float_value,json=floatValue,proto3,oneof"` // Example of a specific type
}

func (*StoreValueRequest_StringValue) isStoreValueRequest_Value() {}

func (*StoreValueRequest_IntValue) isStoreValueRequest_Value() {}

func (*StoreValueRequest_FloatValue) isStoreValueRequest_Value() {}

type StoreValueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreValueResponse) Reset() {
	*x = StoreValueResponse{}
	mi := &file_proto_nexus_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreValueResponse) ProtoMessage() {}

func (x *StoreValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreValueResponse.ProtoReflect.Descriptor instead.
func (*StoreValueResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{9}
}

func (x *StoreValueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreValueResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeletePathRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path in the data Trie
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePathRequest) Reset() {
	*x = DeletePathRequest{}
	mi := &file_proto_nexus_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePathRequest) ProtoMessage() {}

func (x *DeletePathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePathRequest.ProtoReflect.Descriptor instead.
func (*DeletePathRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeletePathResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePathResponse) Reset() {
	*x = DeletePathResponse{}
	mi := &file_proto_nexus_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePathResponse) ProtoMessage() {}

func (x *DeletePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePathResponse.ProtoReflect.Descriptor instead.
func (*DeletePathResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{11}
}

func (x *DeletePathResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeletePathResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// New message types
type EventStream struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        string                 `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"` // Kafka server address
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`   // Kafka topic name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStream) Reset() {
	*x = EventStream{}
	mi := &file_proto_nexus_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStream) ProtoMessage() {}

func (x *EventStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStream.ProtoReflect.Descriptor instead.
func (*EventStream) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{12}
}

func (x *EventStream) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *EventStream) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type Dataset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Dataset:
	//
	//	*Dataset_IndividualFile
	//	*Dataset_Directory
	//	*Dataset_DatabaseTable
	Dataset       isDataset_Dataset `protobuf_oneof:"dataset"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	mi := &file_proto_nexus_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{13}
}

func (x *Dataset) GetDataset() isDataset_Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *Dataset) GetIndividualFile() *IndividualFile {
	if x != nil {
		if x, ok := x.Dataset.(*Dataset_IndividualFile); ok {
			return x.IndividualFile
		}
	}
	return nil
}

func (x *Dataset) GetDirectory() *Directory {
	if x != nil {
		if x, ok := x.Dataset.(*Dataset_Directory); ok {
			return x.Directory
		}
	}
	return nil
}

func (x *Dataset) GetDatabaseTable() *DatabaseTable {
	if x != nil {
		if x, ok := x.Dataset.(*Dataset_DatabaseTable); ok {
			return x.DatabaseTable
		}
	}
	return nil
}

type isDataset_Dataset interface {
	isDataset_Dataset()
}

type Dataset_IndividualFile struct {
	IndividualFile *IndividualFile `protobuf:"bytes,1,opt,name=individual_file,json=individualFile,proto3,oneof"`
}

type Dataset_Directory struct {
	Directory *Directory `protobuf:"bytes,2,opt,name=directory,proto3,oneof"`
}

type Dataset_DatabaseTable struct {
	DatabaseTable *DatabaseTable `protobuf:"bytes,3,opt,name=database_table,json=databaseTable,proto3,oneof"`
}

func (*Dataset_IndividualFile) isDataset_Dataset() {}

func (*Dataset_Directory) isDataset_Dataset() {}

func (*Dataset_DatabaseTable) isDataset_Dataset() {}

type IndividualFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileType      string                 `protobuf:"bytes,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`          // e.g., "csv", "json"
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`          // Path to the file
	ColumnNames   []string               `protobuf:"bytes,3,rep,name=column_names,json=columnNames,proto3" json:"column_names,omitempty"` // Optional column names
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndividualFile) Reset() {
	*x = IndividualFile{}
	mi := &file_proto_nexus_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndividualFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndividualFile) ProtoMessage() {}

func (x *IndividualFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndividualFile.ProtoReflect.Descriptor instead.
func (*IndividualFile) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{14}
}

func (x *IndividualFile) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *IndividualFile) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *IndividualFile) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

type Directory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileType      string                 `protobuf:"bytes,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`                // e.g., "csv", "json"
	DirectoryPath string                 `protobuf:"bytes,2,opt,name=directory_path,json=directoryPath,proto3" json:"directory_path,omitempty"` // Path to the directory
	FileCount     int32                  `protobuf:"varint,3,opt,name=file_count,json=fileCount,proto3" json:"file_count,omitempty"`            // Number of files
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Directory) Reset() {
	*x = Directory{}
	mi := &file_proto_nexus_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Directory) ProtoMessage() {}

func (x *Directory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Directory.ProtoReflect.Descriptor instead.
func (*Directory) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{15}
}

func (x *Directory) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *Directory) GetDirectoryPath() string {
	if x != nil {
		return x.DirectoryPath
	}
	return ""
}

func (x *Directory) GetFileCount() int32 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

type DatabaseTable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DbType        string                 `protobuf:"bytes,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`          // e.g., "Postgres"
	Host          string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`                            // Database server address
	Port          int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`                           // Database server port
	DbName        string                 `protobuf:"bytes,4,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`          // Database name
	TableName     string                 `protobuf:"bytes,5,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"` // Table name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseTable) Reset() {
	*x = DatabaseTable{}
	mi := &file_proto_nexus_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseTable) ProtoMessage() {}

func (x *DatabaseTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseTable.ProtoReflect.Descriptor instead.
func (*DatabaseTable) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{16}
}

func (x *DatabaseTable) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *DatabaseTable) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatabaseTable) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatabaseTable) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *DatabaseTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

// Define a message for string values
type StringValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	mi := &file_proto_nexus_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{17}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Define a message for integer values
type IntValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"` // or int64, depending on your needs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntValue) Reset() {
	*x = IntValue{}
	mi := &file_proto_nexus_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntValue) ProtoMessage() {}

func (x *IntValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntValue.ProtoReflect.Descriptor instead.
func (*IntValue) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{18}
}

func (x *IntValue) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Define a message for float values
type FloatValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float32                `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"` // or double, depending on your needs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FloatValue) Reset() {
	*x = FloatValue{}
	mi := &file_proto_nexus_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FloatValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatValue) ProtoMessage() {}

func (x *FloatValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatValue.ProtoReflect.Descriptor instead.
func (*FloatValue) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{19}
}

func (x *FloatValue) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Request/Response messages for Consumers
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_proto_nexus_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_nexus_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{21}
}

func (x *Event) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// New unified request message
type GetPathRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path in the data Trie
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPathRequest) Reset() {
	*x = GetPathRequest{}
	mi := &file_proto_nexus_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPathRequest) ProtoMessage() {}

func (x *GetPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPathRequest.ProtoReflect.Descriptor instead.
func (*GetPathRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{22}
}

func (x *GetPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetNodeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*GetNodeResponse_StringValue
	//	*GetNodeResponse_IntValue
	//	*GetNodeResponse_FloatValue
	//	*GetNodeResponse_IndividualFile
	//	*GetNodeResponse_Directory
	//	*GetNodeResponse_DatabaseTable
	//	*GetNodeResponse_EventStream
	Value         isGetNodeResponse_Value `protobuf_oneof:"value"`
	ValueType     string                  `protobuf:"bytes,8,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	IsEndOfPath   bool                    `protobuf:"varint,9,opt,name=is_end_of_path,json=isEndOfPath,proto3" json:"is_end_of_path,omitempty"`
	Error         string                  `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"` // Error message if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_proto_nexus_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{23}
}

func (x *GetNodeResponse) GetValue() isGetNodeResponse_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetNodeResponse) GetStringValue() *StringValue {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_StringValue); ok {
			return x.StringValue
		}
	}
	return nil
}

func (x *GetNodeResponse) GetIntValue() *IntValue {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_IntValue); ok {
			return x.IntValue
		}
	}
	return nil
}

func (x *GetNodeResponse) GetFloatValue() *FloatValue {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_FloatValue); ok {
			return x.FloatValue
		}
	}
	return nil
}

func (x *GetNodeResponse) GetIndividualFile() *IndividualFile {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_IndividualFile); ok {
			return x.IndividualFile
		}
	}
	return nil
}

func (x *GetNodeResponse) GetDirectory() *Directory {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_Directory); ok {
			return x.Directory
		}
	}
	return nil
}

func (x *GetNodeResponse) GetDatabaseTable() *DatabaseTable {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_DatabaseTable); ok {
			return x.DatabaseTable
		}
	}
	return nil
}

func (x *GetNodeResponse) GetEventStream() *EventStream {
	if x != nil {
		if x, ok := x.Value.(*GetNodeResponse_EventStream); ok {
			return x.EventStream
		}
	}
	return nil
}

func (x *GetNodeResponse) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *GetNodeResponse) GetIsEndOfPath() bool {
	if x != nil {
		return x.IsEndOfPath
	}
	return false
}

func (x *GetNodeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type isGetNodeResponse_Value interface {
	isGetNodeResponse_Value()
}

type GetNodeResponse_StringValue struct {
	StringValue *StringValue `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type GetNodeResponse_IntValue struct {
	IntValue *IntValue `protobuf:"bytes,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type GetNodeResponse_FloatValue struct {
	FloatValue *FloatValue `protobuf:"bytes,3,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type GetNodeResponse_IndividualFile struct {
	IndividualFile *IndividualFile `protobuf:"bytes,4,opt,name=individual_file,json=individualFile,proto3,oneof"`
}

type GetNodeResponse_Directory struct {
	Directory *Directory `protobuf:"bytes,5,opt,name=directory,proto3,oneof"`
}

type GetNodeResponse_DatabaseTable struct {
	DatabaseTable *DatabaseTable `protobuf:"bytes,6,opt,name=database_table,json=databaseTable,proto3,oneof"`
}

type GetNodeResponse_EventStream struct {
	EventStream *EventStream `protobuf:"bytes,7,opt,name=event_stream,json=eventStream,proto3,oneof"`
}

func (*GetNodeResponse_StringValue) isGetNodeResponse_Value() {}

func (*GetNodeResponse_IntValue) isGetNodeResponse_Value() {}

func (*GetNodeResponse_FloatValue) isGetNodeResponse_Value() {}

func (*GetNodeResponse_IndividualFile) isGetNodeResponse_Value() {}

func (*GetNodeResponse_Directory) isGetNodeResponse_Value() {}

func (*GetNodeResponse_DatabaseTable) isGetNodeResponse_Value() {}

func (*GetNodeResponse_EventStream) isGetNodeResponse_Value() {}

// Common messages
type AccessInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Info:
	//
	//	*AccessInfo_File
	//	*AccessInfo_Database
	Info          isAccessInfo_Info `protobuf_oneof:"info"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessInfo) Reset() {
	*x = AccessInfo{}
	mi := &file_proto_nexus_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfo) ProtoMessage() {}

func (x *AccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfo.ProtoReflect.Descriptor instead.
func (*AccessInfo) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{24}
}

func (x *AccessInfo) GetInfo() isAccessInfo_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AccessInfo) GetFile() *FileInfo {
	if x != nil {
		if x, ok := x.Info.(*AccessInfo_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *AccessInfo) GetDatabase() *DatabaseInfo {
	if x != nil {
		if x, ok := x.Info.(*AccessInfo_Database); ok {
			return x.Database
		}
	}
	return nil
}

type isAccessInfo_Info interface {
	isAccessInfo_Info()
}

type AccessInfo_File struct {
	File *FileInfo `protobuf:"bytes,1,opt,name=file,proto3,oneof"`
}

type AccessInfo_Database struct {
	Database *DatabaseInfo `protobuf:"bytes,2,opt,name=database,proto3,oneof"`
}

func (*AccessInfo_File) isAccessInfo_Info() {}

func (*AccessInfo_Database) isAccessInfo_Info() {}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filepath      string                 `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_proto_nexus_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{25}
}

func (x *FileInfo) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *FileInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type DatabaseInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConnectionString string                 `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`
	Table            string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DatabaseInfo) Reset() {
	*x = DatabaseInfo{}
	mi := &file_proto_nexus_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfo) ProtoMessage() {}

func (x *DatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfo.ProtoReflect.Descriptor instead.
func (*DatabaseInfo) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{26}
}

func (x *DatabaseInfo) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

func (x *DatabaseInfo) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// Request message for listing children
type GetChildrenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path in the data Trie
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChildrenRequest) Reset() {
	*x = GetChildrenRequest{}
	mi := &file_proto_nexus_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildrenRequest) ProtoMessage() {}

func (x *GetChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildrenRequest.ProtoReflect.Descriptor instead.
func (*GetChildrenRequest) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{27}
}

func (x *GetChildrenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Response message for listing children
type GetChildrenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Children      []*ChildInfo           `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"` // List of child paths and their types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChildrenResponse) Reset() {
	*x = GetChildrenResponse{}
	mi := &file_proto_nexus_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildrenResponse) ProtoMessage() {}

func (x *GetChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildrenResponse.ProtoReflect.Descriptor instead.
func (*GetChildrenResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{28}
}

func (x *GetChildrenResponse) GetChildren() []*ChildInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

// New message to hold child information
type ChildInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                // Name of the child
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                // Type of the child
	NumChildren   int32                  `protobuf:"varint,3,opt,name=numChildren,proto3" json:"numChildren,omitempty"` // Number of children
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChildInfo) Reset() {
	*x = ChildInfo{}
	mi := &file_proto_nexus_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildInfo) ProtoMessage() {}

func (x *ChildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildInfo.ProtoReflect.Descriptor instead.
func (*ChildInfo) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{29}
}

func (x *ChildInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChildInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChildInfo) GetNumChildren() int32 {
	if x != nil {
		return x.NumChildren
	}
	return 0
}

type GetPathTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathType      string                 `protobuf:"bytes,1,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"` // The type of the path
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                       // Error message if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPathTypeResponse) Reset() {
	*x = GetPathTypeResponse{}
	mi := &file_proto_nexus_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPathTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPathTypeResponse) ProtoMessage() {}

func (x *GetPathTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nexus_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPathTypeResponse.ProtoReflect.Descriptor instead.
func (*GetPathTypeResponse) Descriptor() ([]byte, []int) {
	return file_proto_nexus_proto_rawDescGZIP(), []int{30}
}

func (x *GetPathTypeResponse) GetPathType() string {
	if x != nil {
		return x.PathType
	}
	return ""
}

func (x *GetPathTypeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_nexus_proto protoreflect.FileDescriptor

var file_proto_nexus_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x67, 0x0a, 0x1a, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x0c,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x22, 0x4d, 0x0a, 0x1b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x69, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3e, 0x0a,
	0x0f, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x49,
	0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x69,
	0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x46, 0x0a,
	0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4b, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0x4f, 0x0a, 0x1d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x37,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x44, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3b, 0x0a, 0x0b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0xc7, 0x01, 0x0a, 0x07, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x22, 0x6d, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x6e, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0b,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x20, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x1b, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0xff, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x34, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x75, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x75, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x4f,
	0x66, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x51, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x55, 0x0a, 0x09, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x75, 0x6d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x48, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xad, 0x05, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x21, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x23, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x17,
	0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x15, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x12, 0x19, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_nexus_proto_rawDescOnce sync.Once
	file_proto_nexus_proto_rawDescData = file_proto_nexus_proto_rawDesc
)

func file_proto_nexus_proto_rawDescGZIP() []byte {
	file_proto_nexus_proto_rawDescOnce.Do(func() {
		file_proto_nexus_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_nexus_proto_rawDescData)
	})
	return file_proto_nexus_proto_rawDescData
}

var file_proto_nexus_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_nexus_proto_goTypes = []any{
	(*RegisterEventStreamRequest)(nil),    // 0: nexus.RegisterEventStreamRequest
	(*RegisterEventStreamResponse)(nil),   // 1: nexus.RegisterEventStreamResponse
	(*RegisterFileRequest)(nil),           // 2: nexus.RegisterFileRequest
	(*RegisterFileResponse)(nil),          // 3: nexus.RegisterFileResponse
	(*RegisterDirectoryRequest)(nil),      // 4: nexus.RegisterDirectoryRequest
	(*RegisterDirectoryResponse)(nil),     // 5: nexus.RegisterDirectoryResponse
	(*RegisterDatabaseTableRequest)(nil),  // 6: nexus.RegisterDatabaseTableRequest
	(*RegisterDatabaseTableResponse)(nil), // 7: nexus.RegisterDatabaseTableResponse
	(*StoreValueRequest)(nil),             // 8: nexus.StoreValueRequest
	(*StoreValueResponse)(nil),            // 9: nexus.StoreValueResponse
	(*DeletePathRequest)(nil),             // 10: nexus.DeletePathRequest
	(*DeletePathResponse)(nil),            // 11: nexus.DeletePathResponse
	(*EventStream)(nil),                   // 12: nexus.EventStream
	(*Dataset)(nil),                       // 13: nexus.Dataset
	(*IndividualFile)(nil),                // 14: nexus.IndividualFile
	(*Directory)(nil),                     // 15: nexus.Directory
	(*DatabaseTable)(nil),                 // 16: nexus.DatabaseTable
	(*StringValue)(nil),                   // 17: nexus.StringValue
	(*IntValue)(nil),                      // 18: nexus.IntValue
	(*FloatValue)(nil),                    // 19: nexus.FloatValue
	(*SubscribeRequest)(nil),              // 20: nexus.SubscribeRequest
	(*Event)(nil),                         // 21: nexus.Event
	(*GetPathRequest)(nil),                // 22: nexus.GetPathRequest
	(*GetNodeResponse)(nil),               // 23: nexus.GetNodeResponse
	(*AccessInfo)(nil),                    // 24: nexus.AccessInfo
	(*FileInfo)(nil),                      // 25: nexus.FileInfo
	(*DatabaseInfo)(nil),                  // 26: nexus.DatabaseInfo
	(*GetChildrenRequest)(nil),            // 27: nexus.GetChildrenRequest
	(*GetChildrenResponse)(nil),           // 28: nexus.GetChildrenResponse
	(*ChildInfo)(nil),                     // 29: nexus.ChildInfo
	(*GetPathTypeResponse)(nil),           // 30: nexus.GetPathTypeResponse
}
var file_proto_nexus_proto_depIdxs = []int32{
	12, // 0: nexus.RegisterEventStreamRequest.event_stream:type_name -> nexus.EventStream
	14, // 1: nexus.RegisterFileRequest.individual_file:type_name -> nexus.IndividualFile
	15, // 2: nexus.RegisterDirectoryRequest.directory:type_name -> nexus.Directory
	16, // 3: nexus.RegisterDatabaseTableRequest.database_table:type_name -> nexus.DatabaseTable
	17, // 4: nexus.StoreValueRequest.string_value:type_name -> nexus.StringValue
	18, // 5: nexus.StoreValueRequest.int_value:type_name -> nexus.IntValue
	19, // 6: nexus.StoreValueRequest.float_value:type_name -> nexus.FloatValue
	14, // 7: nexus.Dataset.individual_file:type_name -> nexus.IndividualFile
	15, // 8: nexus.Dataset.directory:type_name -> nexus.Directory
	16, // 9: nexus.Dataset.database_table:type_name -> nexus.DatabaseTable
	17, // 10: nexus.GetNodeResponse.string_value:type_name -> nexus.StringValue
	18, // 11: nexus.GetNodeResponse.int_value:type_name -> nexus.IntValue
	19, // 12: nexus.GetNodeResponse.float_value:type_name -> nexus.FloatValue
	14, // 13: nexus.GetNodeResponse.individual_file:type_name -> nexus.IndividualFile
	15, // 14: nexus.GetNodeResponse.directory:type_name -> nexus.Directory
	16, // 15: nexus.GetNodeResponse.database_table:type_name -> nexus.DatabaseTable
	12, // 16: nexus.GetNodeResponse.event_stream:type_name -> nexus.EventStream
	25, // 17: nexus.AccessInfo.file:type_name -> nexus.FileInfo
	26, // 18: nexus.AccessInfo.database:type_name -> nexus.DatabaseInfo
	29, // 19: nexus.GetChildrenResponse.children:type_name -> nexus.ChildInfo
	0,  // 20: nexus.NexusService.RegisterEventStream:input_type -> nexus.RegisterEventStreamRequest
	2,  // 21: nexus.NexusService.RegisterFile:input_type -> nexus.RegisterFileRequest
	4,  // 22: nexus.NexusService.RegisterDirectory:input_type -> nexus.RegisterDirectoryRequest
	6,  // 23: nexus.NexusService.RegisterDatabaseTable:input_type -> nexus.RegisterDatabaseTableRequest
	8,  // 24: nexus.NexusService.StoreValue:input_type -> nexus.StoreValueRequest
	10, // 25: nexus.NexusService.DeletePath:input_type -> nexus.DeletePathRequest
	20, // 26: nexus.NexusService.Subscribe:input_type -> nexus.SubscribeRequest
	22, // 27: nexus.NexusService.GetNode:input_type -> nexus.GetPathRequest
	27, // 28: nexus.NexusService.GetChildren:input_type -> nexus.GetChildrenRequest
	1,  // 29: nexus.NexusService.RegisterEventStream:output_type -> nexus.RegisterEventStreamResponse
	3,  // 30: nexus.NexusService.RegisterFile:output_type -> nexus.RegisterFileResponse
	5,  // 31: nexus.NexusService.RegisterDirectory:output_type -> nexus.RegisterDirectoryResponse
	7,  // 32: nexus.NexusService.RegisterDatabaseTable:output_type -> nexus.RegisterDatabaseTableResponse
	9,  // 33: nexus.NexusService.StoreValue:output_type -> nexus.StoreValueResponse
	11, // 34: nexus.NexusService.DeletePath:output_type -> nexus.DeletePathResponse
	21, // 35: nexus.NexusService.Subscribe:output_type -> nexus.Event
	23, // 36: nexus.NexusService.GetNode:output_type -> nexus.GetNodeResponse
	28, // 37: nexus.NexusService.GetChildren:output_type -> nexus.GetChildrenResponse
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_nexus_proto_init() }
func file_proto_nexus_proto_init() {
	if File_proto_nexus_proto != nil {
		return
	}
	file_proto_nexus_proto_msgTypes[8].OneofWrappers = []any{
		(*StoreValueRequest_StringValue)(nil),
		(*StoreValueRequest_IntValue)(nil),
		(*StoreValueRequest_FloatValue)(nil),
	}
	file_proto_nexus_proto_msgTypes[13].OneofWrappers = []any{
		(*Dataset_IndividualFile)(nil),
		(*Dataset_Directory)(nil),
		(*Dataset_DatabaseTable)(nil),
	}
	file_proto_nexus_proto_msgTypes[23].OneofWrappers = []any{
		(*GetNodeResponse_StringValue)(nil),
		(*GetNodeResponse_IntValue)(nil),
		(*GetNodeResponse_FloatValue)(nil),
		(*GetNodeResponse_IndividualFile)(nil),
		(*GetNodeResponse_Directory)(nil),
		(*GetNodeResponse_DatabaseTable)(nil),
		(*GetNodeResponse_EventStream)(nil),
	}
	file_proto_nexus_proto_msgTypes[24].OneofWrappers = []any{
		(*AccessInfo_File)(nil),
		(*AccessInfo_Database)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_nexus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_nexus_proto_goTypes,
		DependencyIndexes: file_proto_nexus_proto_depIdxs,
		MessageInfos:      file_proto_nexus_proto_msgTypes,
	}.Build()
	File_proto_nexus_proto = out.File
	file_proto_nexus_proto_rawDesc = nil
	file_proto_nexus_proto_goTypes = nil
	file_proto_nexus_proto_depIdxs = nil
}
